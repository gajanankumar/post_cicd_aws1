name: Deploy to EC2

on:
  push:
    branches:
      - main  # Change to your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt
        working-directory: .
      - name: make migration
        run: python manage.py makemigrations
             python manage.py migrate
             python manage.py migrate --database=test

      - name: Run tests
        run: python manage.py test --keepdb


      - name: SSH into EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECC_HOST }}
          username: ${{ secrets.EC_USERNAME }}
          key: ${{ secrets.EC_SSH_KEY }}
          script: |
            # Change to your project directory on the EC2 instance
            
            rm -rf myenv
            rm -rf postdjdeploy
            sudo killall python
            mkdir postdjdeploy
            cd postdjdeploy
            virtualenv myenv
  
            git init 

            # Pull the latest code from the Git repository
            git pull https://github.com/gajanankumar/post_cicd_aws1.git

            # Activate your virtual environment
            #/home/ubuntu/postdjdeploy/myenv/bin/python manage.py runserver 0.0.0.0:8000
            #cd myenv/bin
            #source activate
            #print(pwd)
            sudo apt install libmysqlclient-dev
            MYSQLCLIENT_CFLAGS=`mysql_config --cflags` MYSQLCLIENT_LDFLAGS=`mysql_config --libs` pip install mysqlclient==2.2.0
            #cd ..
            #cd ..
            
            # Install or update Python dependencies
            pip install -r requirements.txt
      
            # Run Django database migrations
      
            python3 manage.py migrate 
            
            python3 manage.py runserver 0.0.0.0:8006

            # Collect static files (if you're serving them via Django)
            #python manage.py collectstatic --noinput
            # Restart your application server (e.g., Gunicorn, uWSGI, etc.)
            #$systemctl restart gunicorn
